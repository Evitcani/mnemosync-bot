"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const inversify_1 = require("inversify");
const types_1 = require("./types");
const bot_1 = require("./bot");
const discord_js_1 = require("discord.js");
const message_responder_1 = require("./services/message-responder");
const ping_finder_1 = require("./services/ping-finder");
const DatabaseService_1 = require("./database/base/DatabaseService");
const PartyFundCommandHandler_1 = require("./command-handlers/world/party/inventory/PartyFundCommandHandler");
const RegisterCommandHandler_1 = require("./command-handlers/misc/RegisterCommandHandler");
const PartyToGuildService_1 = require("./database/PartyToGuildService");
const UserDefaultPartyService_1 = require("./database/UserDefaultPartyService");
const UserService_1 = require("./database/UserService");
const UserToGuildService_1 = require("./database/UserToGuildService");
const WhichCommandHandler_1 = require("./command-handlers/world/information/WhichCommandHandler");
const SpecialChannelService_1 = require("./database/SpecialChannelService");
const HelpCommandHandler_1 = require("./command-handlers/misc/HelpCommandHandler");
const QuoteCommandHandler_1 = require("./command-handlers/misc/QuoteCommandHandler");
const BagCommandHandler_1 = require("./command-handlers/world/party/inventory/BagCommandHandler");
const CharacterCommandHandler_1 = require("./command-handlers/world/party/character/CharacterCommandHandler");
const TravelCommandHandler_1 = require("./command-handlers/world/information/TravelCommandHandler");
const PartyController_1 = require("./controllers/party/PartyController");
const PartyFundController_1 = require("./controllers/party/PartyFundController");
const CharacterController_1 = require("./controllers/character/CharacterController");
const UserController_1 = require("./controllers/user/UserController");
const WorldController_1 = require("./controllers/world/WorldController");
const NPCController_1 = require("./controllers/character/NPCController");
const WorldCommandHandler_1 = require("./command-handlers/world/information/WorldCommandHandler");
const EncryptionUtility_1 = require("./utilities/EncryptionUtility");
const SendingController_1 = require("./controllers/character/SendingController");
const SendingCommandHandler_1 = require("./command-handlers/world/party/character/SendingCommandHandler");
let container = new inversify_1.Container();
container.bind(types_1.TYPES.Bot).to(bot_1.Bot).inSingletonScope();
container.bind(types_1.TYPES.Client).toConstantValue(new discord_js_1.Client());
container.bind(types_1.TYPES.Token).toConstantValue(process.env.TOKEN);
container.bind(types_1.TYPES.DatabaseUrl).toConstantValue(process.env.DATABASE_URL);
container.bind(types_1.TYPES.CryptKey).toConstantValue(process.env.CRYPT_KEY);
container.bind(types_1.TYPES.MessageResponder).to(message_responder_1.MessageResponder).inSingletonScope();
container.bind(types_1.TYPES.PingFinder).to(ping_finder_1.PingFinder).inSingletonScope();
container.bind(types_1.TYPES.EncryptionUtility).to(EncryptionUtility_1.EncryptionUtility).inSingletonScope();
container.bind(types_1.TYPES.DatabaseService).to(DatabaseService_1.DatabaseService).inSingletonScope();
container.bind(types_1.TYPES.PartyToGuildService).to(PartyToGuildService_1.PartyToGuildService).inSingletonScope();
container.bind(types_1.TYPES.SpecialChannelService).to(SpecialChannelService_1.SpecialChannelService).inSingletonScope();
container.bind(types_1.TYPES.UserDefaultPartyService).to(UserDefaultPartyService_1.UserDefaultPartyService).inSingletonScope();
container.bind(types_1.TYPES.UserService).to(UserService_1.UserService).inSingletonScope();
container.bind(types_1.TYPES.UserToGuildService).to(UserToGuildService_1.UserToGuildService).inSingletonScope();
container.bind(types_1.TYPES.BagCommandHandler).to(BagCommandHandler_1.BagCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.CharacterCommandHandler).to(CharacterCommandHandler_1.CharacterCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.HelpCommandHandler).to(HelpCommandHandler_1.HelpCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.PartyFundCommandHandler).to(PartyFundCommandHandler_1.PartyFundCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.QuoteCommandHandler).to(QuoteCommandHandler_1.QuoteCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.RegisterUserCommandHandler).to(RegisterCommandHandler_1.RegisterCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.SendingCommandHandler).to(SendingCommandHandler_1.SendingCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.TravelCommandHandler).to(TravelCommandHandler_1.TravelCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.WhichCommandHandler).to(WhichCommandHandler_1.WhichCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.WorldCommandHandler).to(WorldCommandHandler_1.WorldCommandHandler).inSingletonScope();
container.bind(types_1.TYPES.CharacterController).to(CharacterController_1.CharacterController).inSingletonScope();
container.bind(types_1.TYPES.NPCController).to(NPCController_1.NPCController).inSingletonScope();
container.bind(types_1.TYPES.PartyController).to(PartyController_1.PartyController).inSingletonScope();
container.bind(types_1.TYPES.PartyFundController).to(PartyFundController_1.PartyFundController).inSingletonScope();
container.bind(types_1.TYPES.SendingController).to(SendingController_1.SendingController).inSingletonScope();
container.bind(types_1.TYPES.UserController).to(UserController_1.UserController).inSingletonScope();
container.bind(types_1.TYPES.WorldController).to(WorldController_1.WorldController).inSingletonScope();
exports.default = container;
//# sourceMappingURL=inversify.config.js.map